From 599ce25c802fc1154ed619fde4249bb381430407 Mon Sep 17 00:00:00 2001
From: Mike Fleetwood <mike.fleetwood@googlemail.com>
Date: Sun, 28 Feb 2016 15:36:11 +0000
Subject: [PATCH 30/30] tests: t3000-resize-fs.sh: Add very deep directory

Create 500 deep directory tree, with longest name of 4000 characters, to
the file system being resized to test the fix to prevent crash when
resizing a FAT file system with such a long path.
---
 tests/t3000-resize-fs.sh | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/tests/t3000-resize-fs.sh b/tests/t3000-resize-fs.sh
index a79a307..608871c 100755
--- a/tests/t3000-resize-fs.sh
+++ b/tests/t3000-resize-fs.sh
@@ -46,6 +46,13 @@ device_sectors_required=$(echo $default_end | sed 's/s$//')
 # Ensure that $dev is large enough for this test
 test $device_sectors_required -le $dev_n_sectors || fail=1
 
+# create mount point dir
+mount_point="`pwd`/mnt"
+mkdir "$mount_point" || fail=1
+
+# be sure to unmount upon interrupt, failure, etc.
+cleanup_fn_() { umount "${dev}1" > /dev/null 2>&1; }
+
 for fs_type in hfs+ fat32 fat16; do
   echo "fs_type=$fs_type"
 
@@ -69,6 +76,15 @@ for fs_type in hfs+ fat32 fat16; do
   # create the file system
   $mkfs_cmd ${dev}1 || fail=1
 
+  # create 500 deep directory tree with longest name 4000 characters
+  # to catch core dump in libparted/fs/r/fat/count.c flag_traverse_dir()
+  # overflowing 512 byte file_name local buffer.
+  mount "${dev}1" "$mount_point" || fail=1
+  cat /dev/null > exp
+  ( cd "$mount_point"; for d in `seq 500`; do mkdir TESTDIR; cd TESTDIR; done ) > out
+  compare exp out || fail=1   # Ensure no errors creating directory tree
+  umount "${dev}1" || fail=1
+
   # NOTE: shrinking is the only type of resizing that works.
   # resize that file system to be one cylinder (8MiB) smaller
   fs-resize ${dev}1 0 $new_end > out 2>&1 || fail=1
-- 
2.5.0

