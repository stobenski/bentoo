This patch has been taken from the Void Linux distribution.

https://github.com/voidlinux/void-packages/tree/master/srcpkgs/android-tools/patches/android-tools-musl.patch

diff -Naur a/Makefile b/Makefile
--- a/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/Makefile	2017-01-04 22:19:02.912121861 +0500
@@ -0,0 +1,44 @@
+all:
+	$(MAKE) -C system/core/libcutils all
+	$(MAKE) -C system/core/libcrypto_utils all
+	$(MAKE) -C system/core/libziparchive all
+	$(MAKE) -C system/extras/ext4_utils all
+	$(MAKE) -C system/core/libsparse all
+	$(MAKE) -C system/core/libutils all
+	$(MAKE) -C system/core/liblog all
+	$(MAKE) -C system/core/base all
+	$(MAKE) -C system/extras/f2fs_utils all
+	$(MAKE) -C system/core/adb all
+	$(MAKE) -C system/core/fastboot all
+
+install: all
+	$(MAKE) -C system/core/adb install
+	$(MAKE) -C system/core/fastboot install
+
+clean:
+	$(MAKE) -C system/core/libcutils clean
+	$(MAKE) -C system/core/libcrypto_utils clean
+	$(MAKE) -C system/core/libziparchive clean
+	$(MAKE) -C system/extras/ext4_utils clean
+	$(MAKE) -C system/core/libsparse clean
+	$(MAKE) -C system/core/libutils clean
+	$(MAKE) -C system/core/liblog clean
+	$(MAKE) -C system/core/adb libdiagnose_usb
+	$(MAKE) -C system/core/base clean
+	$(MAKE) -C system/extras/f2fs_utils clean
+	$(MAKE) -C system/core/adb clean
+	$(MAKE) -C system/core/fastboot clean
+
+mrproper:
+	$(MAKE) -C system/core/libcutils mrproper
+	$(MAKE) -C system/core/libcrypto_utils mrproper
+	$(MAKE) -C system/core/libziparchive mrproper
+	$(MAKE) -C system/extras/ext4_utils mrproper
+	$(MAKE) -C system/core/libsparse mrproper
+	$(MAKE) -C system/core/libutils mrproper
+	$(MAKE) -C system/core/liblog mrproper
+	$(MAKE) -C system/core/adb libdiagnose_usb
+	$(MAKE) -C system/core/base mrproper
+	$(MAKE) -C system/extras/f2fs_utils mrproper
+	$(MAKE) -C system/core/adb mrproper
+	$(MAKE) -C system/core/fastboot mrproper
diff -Naur a/system/core/adb/adbd_auth.cpp b/system/core/adb/adbd_auth.cpp
--- a/system/core/adb/adbd_auth.cpp  1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/adb/adbd_auth.cpp  2017-01-04 22:19:02.913121849 +0500
@@ -38,6 +38,9 @@
 static fdevent listener_fde;
 static fdevent framework_fde;
 static int framework_fd = -1;
+
+void adbd_auth_verified(atransport *t);
+void send_auth_request(atransport* t);
 
 static void usb_disconnected(void* unused, atransport* t);
 static struct adisconnect usb_disconnect = { usb_disconnected, nullptr};
diff -Naur a/system/core/adb/client/usb_libusb.cpp b/system/core/adb/client/usb_libusb.cpp
--- a/system/core/adb/client/usb_libusb.cpp  1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/adb/client/usb_libusb.cpp  2017-01-04 22:19:02.913121849 +0500
@@ -28,6 +28,7 @@
 #include <thread>
 #include <unordered_map>
+#include <condition_variable>
 
-#include <libusb/libusb.h>
+#include <libusb-1.0/libusb.h>
 
 #include <android-base/file.h>
diff -Naur a/system/core/adb/client/usb_linux.cpp b/system/core/adb/client/usb_linux.cpp
--- a/system/core/adb/client/usb_linux.cpp  1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/adb/client/usb_linux.cpp  2017-01-04 22:19:02.913121849 +0500
@@ -29,6 +29,7 @@
 #include <stdlib.h>
 #include <string.h>
 #include <sys/ioctl.h>
+#include <sys/sysmacros.h>
 #include <sys/time.h>
 #include <sys/types.h>
 #include <unistd.h>
diff -Naur a/system/core/adb/sysdeps/posix/network.cpp b/system/core/adb/sysdeps/posix/network.cpp
--- a/system/core/adb/sysdeps/posix/network.cpp  1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/adb/sysdeps/posix/network.cpp  2017-01-04 22:19:02.913121849 +0500
@@ -21,6 +21,7 @@
 #include <sys/socket.h>
 
 #include <string>
+#include <string.h>
 
 #include "adb_unique_fd.h"
 
diff -Naur a/system/core/adb/Makefile b/system/core/adb/Makefile
--- a/system/core/adb/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/adb/Makefile	2017-01-04 22:19:02.913121849 +0500
@@ -0,0 +0,104 @@
+adb_version := $(shell git -C . rev-parse --short=12 HEAD 2>/dev/null)-android
+
+SRCS+= \
+	adb_client.cpp \
+	client/main.cpp \
+	console.cpp \
+	commandline.cpp \
+	file_sync_client.cpp \
+	line_printer.cpp \
+	services.cpp \
+	shell_service_protocol.cpp \
+
+LIBADB_SRCS= \
+	adb.cpp \
+	adb_auth_host.cpp \
+	adb_io.cpp \
+	adb_listeners.cpp \
+	adb_trace.cpp \
+	adb_utils.cpp \
+	fdevent.cpp \
+	socket_spec.cpp \
+	sockets.cpp \
+	transport.cpp \
+	transport_local.cpp \
+	transport_mdns_unsupported.cpp \
+	transport_usb.cpp \
+	sysdeps_unix.cpp \
+	sysdeps/errno.cpp \
+	client/usb_dispatch.cpp \
+	client/usb_libusb.cpp \
+	client/usb_linux.cpp \
+	bugreport.cpp \
+	sysdeps/posix/network.cpp
+
+LIBDIAGNOSE_USB_SRCS= \
+	diagnose_usb.cpp
+
+
+override CXXFLAGS+= \
+	-I. \
+	-I../include \
+	-I../base/include \
+	-I../libcrypto_utils/include \
+	-D_Nonnull="" \
+	-D_Nullable="" \
+	-D_GNU_SOURCE \
+	-Wall \
+	-Wextra \
+	-Wno-unused-parameter \
+	-Wno-missing-field-initializers \
+	-Wvla \
+	-DADB_VERSION='"$(adb_version)"' \
+	-std=gnu++14 \
+	-DADB_HOST=1 \
+	-fpermissive \
+	-fvisibility=hidden
+
+
+LIBS= \
+	./libadb.a \
+	./libdiagnose_usb.a \
+	../base/libbase.a \
+	../libcrypto_utils/libcrypto_utils.a \
+	../libcutils/libcutils.a \
+	../liblog/liblog.a \
+
+override LDFLAGS+= -lssl -lcrypto -lpthread -lusb-1.0 -lselinux
+
+OBJS= $(SRCS:.cpp=.o)
+LIBADB_OBJS= $(LIBADB_SRCS:.cpp=.o)
+LIBDIAGNOSE_USB_OBJS= $(LIBDIAGNOSE_USB_SRCS:.cpp=.o)
+
+BIN= adb
+
+all: $(BIN)
+
+adb: $(OBJS) libadb libdiagnose_usb
+	$(CXX) -o $@ $(OBJS) $(LIBS) $(LDFLAGS)
+
+
+libadb: libadb.a
+
+libadb.a: $(LIBADB_OBJS)
+	$(AR) rcs $@ $(LIBADB_OBJS)
+
+libdiagnose_usb: libdiagnose_usb.a
+
+libdiagnose_usb.a: $(LIBDIAGNOSE_USB_OBJS)
+	$(AR) rcs $@ $(LIBDIAGNOSE_USB_OBJS)
+
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+install: adb
+	install -Dm755 adb $(DESTDIR)$(PREFIX)/bin/adb
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS) $(LIBADB_OBJS) $(LIBDIAGNOSE_USB_OBJS)
+
+mrproper: clean
+	rm -rf $(BIN) *.a
+
diff -Naur a/system/core/base/errors_unix.cpp b/system/core/base/errors_unix.cpp
--- a/system/core/base/errors_unix.cpp	2017-01-04 21:57:50.000000000 +0500
+++ b/system/core/base/errors_unix.cpp	2017-01-04 22:19:02.913121849 +0500
@@ -17,6 +17,7 @@
 #include "android-base/errors.h"
 
 #include <errno.h>
+#include <cstring>
 
 namespace android {
 namespace base {
diff -Naur a/system/core/base/file.cpp b/system/core/base/file.cpp
--- a/system/core/base/file.cpp  2017-01-04 21:57:50.000000000 +0500
+++ b/system/core/base/file.cpp  2017-01-04 22:19:02.913121849 +0500
@@ -25,6 +25,7 @@
 
 #include <memory>
 #include <mutex>
+#include <cstring>
 #include <string>
 #include <vector>
 
diff -Naur a/system/core/base/logging.cpp b/system/core/base/logging.cpp
--- a/system/core/base/logging.cpp	2017-01-04 21:57:50.000000000 +0500
+++ b/system/core/base/logging.cpp	2017-01-04 22:19:02.913121849 +0500
@@ -41,5 +41,6 @@
 #include <sstream>
 #include <string>
+#include <cstring>
 #include <utility>
 #include <vector>
 
diff -Naur a/system/core/base/Makefile b/system/core/base/Makefile
--- a/system/core/base/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/base/Makefile	2017-01-04 22:19:02.914121836 +0500
@@ -0,0 +1,37 @@
+SRCS+= \
+	file.cpp \
+	logging.cpp \
+	parsenetaddress.cpp \
+	stringprintf.cpp \
+	strings.cpp \
+	errors_unix.cpp \
+	test_utils.cpp
+
+override CXXFLAGS+= \
+	-I./include \
+	-I../include \
+	-D__GLIBC__ \
+	-Wall \
+	-Wextra \
+	-Werror \
+	-std=gnu++14
+
+OBJS= $(SRCS:.cpp=.o)
+
+BIN= libbase.a
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(AR) rcs $@ $(OBJS)
+
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/core/fastboot/Makefile b/system/core/fastboot/Makefile
--- a/system/core/fastboot/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/fastboot/Makefile	2017-01-04 22:31:15.722960465 +0500
@@ -0,0 +1,67 @@
+fastboot_version := $(shell git -C . rev-parse --short=12 HEAD 2>/dev/null)-android
+
+SRCS+= \
+	bootimg_utils.cpp \
+	engine.cpp \
+	fastboot.cpp \
+	fs.cpp\
+	protocol.cpp \
+	socket.cpp \
+	tcp.cpp \
+	udp.cpp \
+	util.cpp \
+	usb_linux.cpp \
+
+
+override CXXFLAGS+= \
+	-I../mkbootimg/ \
+	-I../base/include \
+	-I../libsparse/include \
+	-I../include \
+	-I../adb \
+	-I../../extras/ext4_utils \
+	-I../../extras/ext4_utils/include \
+	-I../../extras/f2fs_utils \
+	-I../libziparchive/include \
+	-Wall \
+	-Wextra \
+	-Wunreachable-code \
+	-DFASTBOOT_VERSION='"$(fastboot_version)"' \
+	-std=gnu++14
+
+LIBS= \
+	../libziparchive/libziparchive.a \
+	../../extras/ext4_utils/libext4_utils.a \
+	../libsparse/libsparse.a \
+	../libutils/libutils.a \
+	../liblog/liblog.a \
+	../adb/libdiagnose_usb.a \
+	../base/libbase.a \
+	../libcutils/libcutils.a \
+	../../extras/f2fs_utils/libf2fs.a \
+	../libcutils/libcutils.a \
+
+override LDFLAGS+= -lz -lpcre -lpthread -lselinux
+
+OBJS= $(SRCS:.cpp=.o)
+
+BIN= fastboot
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(CXX) -o $@ $(OBJS) $(LIBS) $(LDFLAGS)
+
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+install: fastboot
+	install -Dm755 fastboot $(DESTDIR)$(PREFIX)/bin/fastboot
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/core/include/cutils/atomic.h b/system/core/include/cutils/atomic.h
--- a/system/core/include/cutils/atomic.h	2017-01-04 21:57:50.000000000 +0500
+++ b/system/core/include/cutils/atomic.h	2017-01-04 22:19:02.914121836 +0500
@@ -19,7 +19,12 @@
 
 #include <stdint.h>
 #include <sys/types.h>
+#ifdef __cplusplus
+#include <atomic>
+using namespace std;
+#else
 #include <stdatomic.h>
+#endif
 
 #ifndef ANDROID_ATOMIC_INLINE
 #define ANDROID_ATOMIC_INLINE static inline
@@ -123,6 +128,7 @@
     return atomic_fetch_or_explicit(a, value, memory_order_release);
 }
 
+#ifndef __cplusplus
 /*
  * Perform an atomic load with "acquire" or "release" ordering.
  *
@@ -217,6 +222,7 @@
                                           memory_order_release,
                                           memory_order_relaxed));
 }
+#endif
 
 /*
  * Fence primitives.
diff -Naur a/system/core/include/cutils/trace.h b/system/core/include/cutils/trace.h
--- a/system/core/include/cutils/trace.h	2017-01-04 21:57:50.000000000 +0500
+++ b/system/core/include/cutils/trace.h	2017-01-04 22:19:02.914121836 +0500
@@ -18,7 +18,12 @@
 #define _LIBS_CUTILS_TRACE_H
 
 #include <inttypes.h>
+#ifdef __cplusplus
+#include <atomic>
+using namespace std;
+#else
 #include <stdatomic.h>
+#endif
 #include <stdbool.h>
 #include <stdint.h>
 #include <stdio.h>
diff -Naur a/system/core/include/log/log.h b/system/core/include/log/log.h
--- a/system/core/include/log/log.h	2017-01-04 21:57:50.000000000 +0500
+++ b/system/core/include/log/log.h	2017-01-04 22:19:02.915121824 +0500
@@ -37,6 +37,7 @@
 #include <log/uio.h> /* helper to define iovec for portability */
 
 #ifdef __cplusplus
+#include <cstring>
 extern "C" {
 #endif
 
diff -Naur a/system/core/libcrypto_utils/Makefile b/system/core/libcrypto_utils/Makefile
--- a/system/core/libcrypto_utils/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/libcrypto_utils/Makefile	2017-01-04 22:19:02.915121824 +0500
@@ -0,0 +0,24 @@
+SRCS+= \
+	android_pubkey.c
+
+override CFLAGS+= -Iinclude 
+
+OBJS= $(SRCS:.c=.o)
+BIN= libcrypto_utils.a
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(AR) rcs $@ $(OBJS)
+
+%.o: %.c
+	$(CC) -c $< $(CFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
+
diff -Naur a/system/core/libcutils/Makefile b/system/core/libcutils/Makefile
--- a/system/core/libcutils/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/libcutils/Makefile	2017-01-04 22:19:02.915121824 +0500
@@ -0,0 +1,41 @@
+CSRCS+= \
+	load_file.c \
+	threads.c \
+	socket_inaddr_any_server_unix.c \
+	socket_local_client_unix.c \
+	socket_local_server_unix.c \
+	socket_network_client_unix.c
+
+CXXSRCS+= \
+	sockets_unix.cpp \
+	sockets.cpp \
+	android_get_control_file.cpp
+
+override CFLAGS+= -I../include
+
+override CXXFLAGS+= \
+	-I../include \
+	-std=gnu++14
+
+COBJS= $(CSRCS:.c=.o)
+CXXOBJS= $(CXXSRCS:.cpp=.o)
+BIN= libcutils.a
+
+all: $(BIN)
+
+$(BIN): $(COBJS) $(CXXOBJS)
+	$(AR) rcs $@ $(COBJS) $(CXXOBJS)
+
+%.o: %.c
+	$(CC) -c $< $(CFLAGS) -o $@
+
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(COBJS) $(CXXOBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/core/liblog/Makefile b/system/core/liblog/Makefile
--- a/system/core/liblog/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/liblog/Makefile	2017-01-04 22:19:02.915121824 +0500
@@ -0,0 +1,58 @@
+CSRCS+= \
+	log_event_list.c \
+	log_event_write.c \
+	logger_write.c \
+	config_write.c \
+	stderr_write.c \
+	logger_name.c \
+	config_read.c \
+	logger_lock.c \
+	fake_log_device.c \
+	fake_writer.c \
+	local_logger.c \
+	logprint.c
+
+CXXSRCS+= \
+	event_tag_map.cpp
+
+override CFLAGS+= \
+	-I../include \
+	-Iinclude \
+	-DLIBLOG_LOG_TAG=1005 \
+	-DSNET_EVENT_LOG_TAG=1397638484 \
+	-DFAKE_LOG_DEVICE=1 \
+	-Werror \
+	-fvisibility=hidden
+
+override CXXFLAGS+= \
+	-I../include \
+	-Iinclude \
+	-DLIBLOG_LOG_TAG=1005 \
+	-DSNET_EVENT_LOG_TAG=1397638484 \
+	-DFAKE_LOG_DEVICE=1 \
+	-Werror \
+	-fvisibility=hidden
+	-std=gnu++14
+
+COBJS= $(CSRCS:.c=.o)
+CXXOBJS= $(CXXSRCS:.cpp=.o)
+BIN= liblog.a
+
+all: $(BIN)
+
+$(BIN): $(COBJS) $(CXXOBJS)
+	$(AR) rcs $@ $(COBJS) $(CXXOBJS)
+
+%.o: %.c
+	$(CC) -c $< $(CFLAGS) -o $@
+
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(COBJS) $(CXXOBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/core/libsparse/sparse_read.cpp b/system/core/libsparse/sparse_read.cpp
--- a/system/core/libsparse/sparse_read.cpp    1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/libsparse/sparse_read.cpp    2017-01-04 22:19:02.916121811 +0500
@@ -26,6 +26,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string>
+#include <string.h>
 #include <unistd.h>
 
 #include <sparse/sparse.h>
diff -Naur a/system/core/libsparse/Makefile b/system/core/libsparse/Makefile
--- a/system/core/libsparse/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/libsparse/Makefile	2017-01-04 22:19:02.916121811 +0500
@@ -0,0 +1,42 @@
+CSRCS+= \
+	backed_block.c \
+	output_file.c \
+	sparse.c \
+	sparse_crc32.c \
+	sparse_err.c
+
+CXXSRCS+= \
+       sparse_read.cpp
+
+override CFLAGS+= \
+	-I./include \
+	-Werror
+
+override CXXFLAGS+= \
+	-I../include \
+	-I./include \
+	-I../base/include \
+	-std=gnu++14
+
+COBJS= $(CSRCS:.c=.o)
+CXXOBJS= $(CXXSRCS:.cpp=.o)
+
+BIN= libsparse.a
+
+all: $(BIN)
+
+$(BIN): $(COBJS) $(CXXOBJS)
+	$(AR) rcs $@ $(COBJS) $(CXXOBJS)
+
+%.o: %.c
+	$(CC) -c $< $(CFLAGS) -o $@
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(COBJS) $(CXXOBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/core/libutils/Makefile b/system/core/libutils/Makefile
--- a/system/core/libutils/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/libutils/Makefile	2017-01-04 22:24:10.702273955 +0500
@@ -0,0 +1,27 @@
+SRCS+= \
+	FileMap.cpp
+
+override CXXFLAGS+= \
+	-I../include \
+	-DLIBUTILS_NATIVE=1 \
+	-std=gnu++14
+
+OBJS= $(SRCS:.cpp=.o)
+
+BIN= libutils.a
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(AR) rcs $@ $(OBJS)
+
+%.o: %.cpp
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/core/libziparchive/Makefile b/system/core/libziparchive/Makefile
--- a/system/core/libziparchive/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/core/libziparchive/Makefile	2017-01-04 22:19:02.916121811 +0500
@@ -0,0 +1,32 @@
+SRCS+= \
+	zip_archive.cc \
+
+override CXXFLAGS+= \
+	-I./include \
+	-I../include \
+	-I../base/include \
+	-DZLIB_CONST \
+	-Werror \
+	-fno-strict-aliasing \
+	-std=gnu++14 \
+	-Wall
+
+OBJS= $(SRCS:.cc=.o)
+
+BIN= libziparchive.a
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(AR) rcs $@ $(OBJS)
+
+%.o: %.c
+	$(CXX) -c $< $(CXXFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/extras/ext4_utils/Makefile b/system/extras/ext4_utils/Makefile
--- a/system/extras/ext4_utils/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/extras/ext4_utils/Makefile	2017-01-04 22:20:12.669249777 +0500
@@ -0,0 +1,38 @@
+SRCS+= \
+	make_ext4fs.c \
+	ext4fixup.c \
+	ext4_utils.c \
+	allocate.c \
+	contents.c \
+	extent.c \
+	indirect.c \
+	sha1.c \
+	wipe.c \
+	crc16.c \
+	ext4_sb.c
+
+override CFLAGS+= \
+	-I../../core/libsparse/include \
+	-I../../core/include \
+	-Iinclude \
+	-fno-strict-aliasing
+
+OBJS= $(SRCS:.c=.o)
+
+BIN= libext4_utils.a
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(AR) rcs $@ $(OBJS)
+
+%.o: %.c
+	$(CC) -c $< $(CFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
diff -Naur a/system/extras/f2fs_utils/f2fs_format_utils.h b/system/extras/f2fs_utils/f2fs_format_utils.h
--- a/system/extras/f2fs_utils/f2fs_format_utils.h 1970-01-01 05:00:00.000000000 +0500
+++ b/system/extras/f2fs_utils/f2fs_format_utils.h 2017-01-04 22:26:56.155205508 +0500
@@ -0,0 +1,17 @@
+/**
+ * f2fs_format_utils.c
+ *
+ * Copyright (c) 2014 Samsung Electronics Co., Ltd.
+ *             http://www.samsung.com/
+ *
+ * Dual licensed under the GPL or LGPL version 2 licenses.
+ */
+#define _LARGEFILE64_SOURCE
+
+#include "f2fs_fs.h"
+
+extern struct f2fs_configuration c;
+
+int f2fs_trim_device(int, u_int64_t);
+int f2fs_trim_devices(void);
+int f2fs_format_device(void);
diff -Naur a/system/extras/f2fs_utils/f2fs_utils.c b/system/extras/f2fs_utils/f2fs_utils.c
--- a/system/extras/f2fs_utils/f2fs_utils.c	2017-01-04 21:57:54.000000000 +0500
+++ b/system/extras/f2fs_utils/f2fs_utils.c	2017-01-04 22:19:02.917121799 +0500
@@ -53,7 +53,7 @@
 	config.fd = -1;
 	if (f2fs_sparse_file) {
 		sparse_file_destroy(f2fs_sparse_file);
-		f2fs_sparse_file = NULL;
+		f2fs_sparse_file = 0;
 	}
 }
 
@@ -73,6 +73,6 @@
 	sparse_file_write(f2fs_sparse_file, fd, /*gzip*/0, /*sparse*/1, /*crc*/0);
 	sparse_file_destroy(f2fs_sparse_file);
 	flush_sparse_buffs();
-	f2fs_sparse_file = NULL;
+	f2fs_sparse_file = 0;
 	return 0;
 }
diff -Naur a/system/extras/f2fs_utils/Makefile b/system/extras/f2fs_utils/Makefile
--- a/system/extras/f2fs_utils/Makefile	1970-01-01 05:00:00.000000000 +0500
+++ b/system/extras/f2fs_utils/Makefile	2017-01-04 22:26:56.155205508 +0500
@@ -0,0 +1,30 @@
+SRCS+= \
+	f2fs_utils.c \
+	f2fs_ioutils.c \
+	f2fs_dlutils.c
+
+override CFLAGS+= \
+	-I. \
+	-I../../core/libsparse/include \
+	-Wno-unused-parameter
+
+OBJS= $(SRCS:.c=.o)
+
+BIN= libf2fs.a
+
+all: $(BIN)
+
+$(BIN): $(OBJS)
+	$(AR) rcs $@ $(OBJS)
+
+%.o: %.c
+	$(CC) -c $< $(CFLAGS) -o $@
+
+.PHONY: clean mrproper
+
+clean:
+	rm -rf $(OBJS)
+
+mrproper: clean
+	rm -rf $(BIN)
+
